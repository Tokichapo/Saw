#!/usr/bin/env python
#===================================================================================================
# mock for the "aws" cli
#
# the mock behaves as follows:
# - argvs are going to be written to "aws.out" (one command in each line)
# - if "aws s3api get-object" is invoked, the destination will be populated with a test zip file.
# - for "get-object" and "sync", "aws.out" argv[-1] is replaced by "archive.zip" and "contents.zip"
#   because the actual value is a full path of a temporary directory
#
import sys
import json
import os
import shutil

scriptdir=os.path.dirname(os.path.realpath(__file__))

# if "get-object" is called to contents, copy a test zip file to contents
if sys.argv[2] == "get-object" and "/contents/" in sys.argv[-1] and sys.argv[-1].split("/contents/")[1]:
    shutil.copy(os.path.join(scriptdir, 'test.zip'), sys.argv[-1])
    sys.argv[-1] = "/tmp/contents/archive.zip"
# else if "get-object" is called with a local destination, copy a test zip file to the destination
elif sys.argv[2] == "get-object" and not sys.argv[-1].startswith("s3://"):
    shutil.copyfile(os.path.join(scriptdir, 'test.zip'), sys.argv[-1])
    sys.argv[-1] = "archive.zip"

if sys.argv[2] == "sync":
    contentsIdx = 3
    if '--include' in sys.argv:
      contentsIdx += sys.argv.count("--include") * 2
    if '--exclude' in sys.argv:
      contentsIdx += sys.argv.count("--exclude") * 2
    if '--delete' in sys.argv:
      contentsIdx += 1
    sys.argv[contentsIdx] = "contents.zip"

with open("./aws.out", "a") as myfile:
    myfile.write(json.dumps(sys.argv[1:]) + "\n")
