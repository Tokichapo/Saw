{
 "Resources": {
  "SuccessDestinationQueue84EFF5D1": {
   "Type": "AWS::SQS::Queue",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "FunctionServiceRole675BB04A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "FunctionServiceRoleDefaultPolicy2F49994A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "SuccessDestinationQueue84EFF5D1",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FunctionServiceRoleDefaultPolicy2F49994A",
    "Roles": [
     {
      "Ref": "FunctionServiceRole675BB04A"
     }
    ]
   }
  },
  "Function76856677": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n        exports.handler = async (event) => event.Records[0].Sns.Message;"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "FunctionServiceRole675BB04A",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "FunctionServiceRoleDefaultPolicy2F49994A",
    "FunctionServiceRole675BB04A"
   ]
  },
  "FunctionEventInvokeConfig9F3DE447": {
   "Type": "AWS::Lambda::EventInvokeConfig",
   "Properties": {
    "DestinationConfig": {
     "OnSuccess": {
      "Destination": {
       "Fn::GetAtt": [
        "SuccessDestinationQueue84EFF5D1",
        "Arn"
       ]
      }
     }
    },
    "FunctionName": {
     "Ref": "Function76856677"
    },
    "Qualifier": "$LATEST"
   }
  },
  "FunctionAllowInvokeTestCaseDefaultRegionFunctionOptInRegionTopicTopicStackTopicA72CD4F70B39D99C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Function76856677",
      "Arn"
     ]
    },
    "Principal": "sns.af-south-1.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "ExportsReader8B249524",
      "/cdk/exports/TestCaseDefaultRegionFunctionOptInRegionTopicFunctionStack035B2CFC/TestCaseDefaultRegionFunctionOptInRegionTopicTopicStackBBE3508Dafsouth1RefTopicBFC7AF6E1D68373A"
     ]
    }
   }
  },
  "FunctionTopicD77BEC18": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "Function76856677",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "Region": "af-south-1",
    "TopicArn": {
     "Fn::GetAtt": [
      "ExportsReader8B249524",
      "/cdk/exports/TestCaseDefaultRegionFunctionOptInRegionTopicFunctionStack035B2CFC/TestCaseDefaultRegionFunctionOptInRegionTopicTopicStackBBE3508Dafsouth1RefTopicBFC7AF6E1D68373A"
     ]
    }
   }
  },
  "ExportsReader8B249524": {
   "Type": "Custom::CrossRegionExportReader",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68",
      "Arn"
     ]
    },
    "ReaderProps": {
     "region": "us-east-1",
     "prefix": "TestCaseDefaultRegionFunctionOptInRegionTopicFunctionStack035B2CFC",
     "imports": {
      "/cdk/exports/TestCaseDefaultRegionFunctionOptInRegionTopicFunctionStack035B2CFC/TestCaseDefaultRegionFunctionOptInRegionTopicTopicStackBBE3508Dafsouth1RefTopicBFC7AF6E1D68373A": "{{resolve:ssm:/cdk/exports/TestCaseDefaultRegionFunctionOptInRegionTopicFunctionStack035B2CFC/TestCaseDefaultRegionFunctionOptInRegionTopicTopicStackBBE3508Dafsouth1RefTopicBFC7AF6E1D68373A}}"
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Resource": "arn:aws:ssm:us-east-1:339712719728:parameter/cdk/exports/TestCaseDefaultRegionFunctionOptInRegionTopicFunctionStack035B2CFC/*",
         "Action": [
          "ssm:AddTagsToResource",
          "ssm:RemoveTagsFromResource",
          "ssm:GetParameters"
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-339712719728-us-east-1",
     "S3Key": "d6fa38886a871b64de769ec5016af90a071e6429aa8e7de84f595e4e2462e17d.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD"
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}